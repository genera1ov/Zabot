from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor
import asyncio
import logging

API_TOKEN = '8094183993:AAErYMPxP-ODVDgMBJb01AZjdi3w5WbNIis'  
RESPONSIBLE_USERNAME = '@ZaGLSklad'  

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

pending_requests = {}

@dp.message_handler(commands=['–∑–∞–ø—Ä–æ—Å'])
async def handle_request(message: Message):
    detail = message.get_args()
    if not detail:
        await message.reply("–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ—Ç–∞–ª–∏. –ü—Ä–∏–º–µ—Ä: /–∑–∞–ø—Ä–æ—Å 123456")
        return

    reply = await message.reply(
        f"–ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–∏: {detail}\n–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: {RESPONSIBLE_USERNAME}\n‚è≥ –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç..."
    )
    pending_requests[reply.message_id] = (message.chat.id, detail)

    await asyncio.sleep(600)  # 10 –º–∏–Ω—É—Ç
    if reply.message_id in pending_requests:
        await message.answer(
            f"üîÅ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –¥–µ—Ç–∞–ª—å {detail}\n{RESPONSIBLE_USERNAME}, –ø—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!"
        )

@dp.message_handler()
async def handle_response(message: Message):
    for msg_id in list(pending_requests):
        if str(pending_requests[msg_id][1]) in message.text:
            del pending_requests[msg_id]

if __name__ == '__main__':
    executor.start_polling(dp)
